x[i]<-x[i]
x[j]<-temp
}
}
}
return (x)
dulieu <- c(32, 17, 49, 98, 06, 25, 53, 61)
selection_sort(dulieu)
selfsort <- function(x){
if (length(x)>1){
min<-which.min(x)
c(x[min], selfsort(x[-min]))
}else X
}
}
selection_sort<- function(x){
n<-length(x)
for (i in 1:(n-1)){
for j in (i+1):n){
if (x[j]<x[i]){
temp<-x[i]
x[i]<-x[i]
x[j]<-temp
}
}
}
return (x)
}
selection_sort<- function(x){
n<-length(x)
for (i in 1:(n-1)){
for j in (i+1):n){
if (x[j]<x[i]){
temp<-x[i]
x[i]<-x[i]
x[j]<-temp
}
}
}
return (x)
}
dulieu <- c(32, 17, 49, 98, 06, 25, 53, 61)
selection_sort(dulieu)
selfsort <- function(x){
if (length(x)>1){
min<-which.min(x)
c(x[min], selfsort(x[-min]))
}else X
}
}
}
selection_sort<- function(x){
n<-length(x)
for (i in 1:(n-1)){
for j in (i+1):n){
if (x[j]<x[i]){
temp<-x[i]
x[i]<-x[i]
x[j]<-temp
}
}
}
return (x)
}
selection_sort<- function(x){
n<-length(x)
for (i in 1:(n-1)){
for j in (i+1):n){
if (x[j]<x[i]){
temp<-x[i]
x[i]<-x[i]
x[j]<-temp
}
}
}
return (x)
}
selection_sort<- function(x){
n<-length(x)
for (i in 1:(n-1)){
for (j in (i+1):n){
if (x[j]<x[i]){
temp<-x[i]
x[i]<-x[i]
x[j]<-temp
}
}
}
return (x)
}
dulieu <- c(32, 17, 49, 98, 06, 25, 53, 61)
selection_sort(dulieu)
selfsort <- function(x){
if (length(x)>1){
min<-which.min(x)
c(x[min], selfsort(x[-min]))
}else X
}
selection_sort<- function(x){
n<-length(x)
for (i in 1:(n-1)){
for (j in (i+1):n){
if (x[j]<x[i]){
temp<-x[i]
x[i]<-x[j]
x[j]<-temp
}
}
}
return (x)
}
dulieu <- c(32, 17, 49, 98, 06, 25, 53, 61)
selection_sort(dulieu)
selfsort <- function(x){
if (length(x)>1){
min<-which.min(x)
c(x[min], selfsort(x[-min]))
}else X
}
insertion_sort <- function(x){
n<-length(x)
for (i in 1:(n-1)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=[j]
}x[j+1]+temp}}
}
}
}
insertion_sort <- function(x){
n<-length(x)
for (i in 1:(n-1)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=[j]
}x[j+1]+temp}}
insertion_sort <- function(x){
n<-length(x)
for (i in 1:(n-1)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=[j]
}x[j+1]+temp}}
}
}
}
insertion_sort <- function(x){
n<-length(x)
for (i in 1:(n-1)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=[j]
}x[j+1]+temp}}
}
}
}
insertion_sort <- function(x){
n<-length(x)
for (i in 2 n)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=[j]
}x[j+1]+temp}}
}
}
}
insertion_sort <- function(x){
n<-length(x)
for (i in 2 n)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=[j]
}x[j+1]+temp}}
}return (x)
}
}
}
insertion_sort <- function(x){
n<-length(x)
for (i in 2 n)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=[j]
j=j-1
}
}x[j+1]+temp}}
}
return (x)
}
insertion_sort <- function(x){
n<-length(x)
for (i in 2 n)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=[j]
j=j-1
}
}x[j+1]+temp}}
}
return(x)
}
insertion_sort <- function(x){
n<-length(x)
for (i in 2 n)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=[j]
j=j-1
}
}x[j+1]+temp}}
}
return(x)
}
insertion_sort <- function(x){
n<-length(x)
for (i in 2 n)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=[j]
j=j-1
}
}
x[j+1]+temp}
}
return(x)
}
insertion_sort <- function(x){
n<-length(x)
for (i in 2 n)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=[j]
j=j-1
}
}
x[j+1]+temp}
}
return(x)
}
insertion_sort <- function(x){
n<-length(x)
for (i in 2:n)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=[j]
j=j-1
}
}
x[j+1]+temp}
}
return(x)
}
insertion_sort <- function(x){
n<-length(x)
for (i in 2:n)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=[j]
j=j-1
}
x[j+1]+temp}
}
return(x)
}
insertion_sort <- function(x){
n<-length(x)
for (i in 2:n)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=[j]
j=j-1
}
x[j+1]+temp}
}
return(x)
}
insertion_sort <- function(x){
n<-length(x)
for (i in 2:n)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=[j]
j=j-1
}
x[j+1]+temp
}
return(x)
}
insertion_sort <- function(x){
n<-length(x)
for (i in 2:n)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=[j]
j=j-1
}
x[j+1]+temp
}
return(x)
}
insertion_sort <- function(x){
n<-length(x)
for (i in 2:n)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=[j]
j=j-1
}
x[j+1]+temp
}
return(x)
}
insertion_sort <- function(x){
n<-length(x)
for (i in 2:n)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=[j]
j=j-1
}
x[j+1] = temp
}
return(x)
}
insertion_sort <- function(x){
n<-length(x)
for (i in 2:n)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=x[j]
j=j-1
}
x[j+1] = temp
}
return(x)
}
insertion_sort <- function(x){
n<-length(x)
for (i in 2:n)){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=x[j]
j=j-1
}
x[j+1] = temp
}
return(x)
}
insertion_sort <- function(x){
n<-length(x)
for (i in 2:n){
temp<-x[i]
j=i-1
while ((x[j]>temp)&&(j>=0)){
x[j+1]=x[j]
j=j-1
}
x[j+1] = temp
}
return(x)
}
x <-sample(1:100,10)
n <- length(x)
example <- function(x)
{
for (i in 1:n-1)
{
while (x[i] > x[i+1])
{
temp <- x[i+1]
x[i+1] <- x[i]
x[i] <- temp
}
i <- i+1
}
}
example(x)
example <- function(x){
n<-length(x)
for(j in 1:(n-1)){
for(i in 1:(n-j)){
if(x[i]>x[i+1]){
temp<-x[i]
x[i]<-x[i+1]
x[i+1]<-temp
}
}
}
return(x)
}
bubble_sort<- function(a){
i=1
repeat{
no_exchange=1
n= length(a)
for (j in n:2){
if (a[(j-1)]>a[j]){
temp=a[(j-1)]{
a[j] = temp
no_exchange = 0
}
}
i = i+1
if (no_exchange || j == (n-1)){break}
}
return (a)
}
bubble_sort <- function(a){
bubble_sort <- function(a){
i=1
repeat{
no_exchange=1
n= length(a)
for (j in n:2){
if (a[(j-1)]>a[j]){
temp=a[(j-1)]
a[j] = temp
no_exchange = 0
}
}
i = i+1
if (no_exchange || j == (n-1)){break}
}
return (a)
}
bubble_sort(dulieu)
quick_sort<-function(x)
{
if(length(x)<=1) return(x)
pivot<-x[1]
rest<-x[-1]
pivot_less<-quick_sort(rest[rest<pivot])
pivot_greater<-quick_sort(rest[rest>=pivot])
return(c(pivot_less,pivot,pivot_greater))
}
setwd("C:\\works\\insulin")
Owls<-read.table(file = "Owls.txt", header = TRUE)
names(Owls)
str(Owls)
unique(Owls$Nest)   # Có 27 loại Nest
# Vẽ biểu đồ cho từng loại Nest
Owls.ATV <- Owls[Owls$Nest=="AutavauxTV",]
plot(x=Owls.ATV$arrivalTime,
y=Owls.ATV$NegPerChick,
xlab="Arrival Time",
main="AutavauTV",
ylab= "Negotiation behaviour")
plot(x=Owls.ATV$ArrivalTime,
y=Owls.ATV$NegPerChick,
xlab="Arrival Time",
main="AutavauTV",
ylab= "Negotiation behaviour")
Owls.Bot<-Owls[Owls$Nest=="Bochet",]
plot(x=Owls.ATV$arrivalTime,
y=Owls.ATV$NegPerChick,
xlab="Arrival Time",
main="Bochet",
ylab= "Negotiation behaviour")
plot(x=Owls.ATV$ArrivalTime,
y=Owls.ATV$NegPerChick,
xlab="Arrival Time",
main="Bochet",
ylab= "Negotiation behaviour")
AllNests<- unique(Owls$Nest)
for (i in 1:27) {
Nest.i <- AllNest[i]
Owls.i<- Owls[Owls$Nest==Nest.i,]
YourFileName<-paste(Nest.i, ".jpg",sep = "")
jpeg(file=YourFileName)
plot(x=Owls.i$ArrivalTime,
y=Owls.i$NegPerChick,
xlab="Arrival Time",
main=Nest.i,
ylab= "Negotiation behaviour"
)
dev.off()
}
AllNests<- unique(Owls$Nest)
Nest.i <- AllNests[i]
for (i in 1:27) {
Nest.i <- AllNests[i]
Owls.i<- Owls[Owls$Nest==Nest.i,]
YourFileName<-paste(Nest.i, ".jpg",sep = "")
jpeg(file=YourFileName)
plot(x=Owls.i$ArrivalTime,
y=Owls.i$NegPerChick,
xlab="Arrival Time",
main=Nest.i,
ylab= "Negotiation behaviour"
)
dev.off()
}
